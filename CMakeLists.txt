cmake_minimum_required(VERSION 3.1)
project(ogdf-user-example CXX)

# OGDF
set(OGDF_DIR "ogdf")
find_package(OGDF REQUIRED CONFIG)
if(NOT OGDF_FOUND)
  message(FATAL_ERROR "No OGDF configuration for CMake has been found. "
    "Please set OGDF_CONFIG_SEARCH_PATH such that ogdf-config.cmake (generated by your OGDF build) can be found.")
endif()

# JNI
find_package(JNI REQUIRED)
include_directories(${JNI_INCLUDE_DIRS})

# TMAP
find_library(TMAP NAMES "tmap" PATHS "tmap/out/" REQUIRED)

find_package(Python COMPONENTS Development) # TODO: warum brauche ich hier Python? Muss irgendwie weg

add_library(ogdf_based_lib SHARED LayoutFromEdgeList_internal.cpp de_unijena_bioinf_TreeVisualization_TreeVisualizer.h) # Das ist das wichtige hier (SHARED!), waere der OGDF_JNI_WRAPPER

target_include_directories(ogdf_based_lib PRIVATE ${OGDF_INCLUDE_DIRS})
target_include_directories(ogdf_based_lib PRIVATE "tmap/src/_tmap")

target_link_libraries(ogdf_based_lib PRIVATE OGDF ${TMAP} ${Python_LIBRARIES}) # wrapper mit OGDF + TMAP linken

add_executable(ogdf_test LayoutFromEdgeList_internal.cpp) # test ob's auch funktioniert
target_link_libraries(ogdf_test PRIVATE ogdf_based_lib) # test linken
